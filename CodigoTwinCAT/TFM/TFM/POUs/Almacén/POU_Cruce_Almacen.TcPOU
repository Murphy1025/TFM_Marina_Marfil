<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="POU_Cruce_Almacen" Id="{05137a19-2ad6-4ba4-a185-6b1af90816da}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK POU_Cruce_Almacen
VAR_INPUT
	
	Contador_Corto 					: INT; // Contador de la palets en la cinta de rodillos corta a la entrada del cruce
	Contador_Largo 					: INT; // Contador de la palets en la cinta de rodillos larga a la entrada del cruce
	Diffuse_Sensor_Corto 			: BOOL; // Sensor en la cinta de rodillos corta a la entrada del cruce
	Diffuse_Sensor_Largo			: BOOL; // Sensor en la cinta de rodillos larga a la entrada del cruce
	Falling_Edge_Sensor_Salida 		: BOOL;
	Falling_Edge_Sensor_Secundario 	: BOOL;
	Rasing_Edge_Sensor_Principal	: BOOL;	
	Sacar_Palet_Paletizador			: BOOL; // Variable para indicar que el paletizador puede introducir el palet ya relleno en la cinta de salida
	Sacar_Palet_Turntable			: BOOL; // Variable para indicar que la plataforma giratoria puede introducir el palet en la cinta principal
	Turnable_Back_Limit 			: BOOL; // Sensor trasero de la plataforma giratoria
	Turnable_Limit_0 				: BOOL; // Sensor de límite 0 de la plataforma giratoria
	Turnable_Limit_90 				: BOOL; // Sensor de límite 90 de la plataforma giratoria
	
END_VAR
VAR_OUTPUT
	
	Roller_Conveyor_Corto 			: BOOL; // Cinta transportadora de la línea corta de entrada
	Roller_Conveyor_Largo 			: BOOL; // Cinta transportadora de la línea larga de entrada
	Turnable_Roll_menos 			: BOOL := FALSE; // Variable relacionada con los rodillos de la plataforma giratoria
	Turnable_Turn 					: BOOL := TRUE; // Variable relacionada con el giro de la plataforma
	
END_VAR
VAR
	palet : INT := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//Selección estado del cruce. Si llegan las dos Palets a la vez se le da prioridad a la linea corta, parando la larga	
IF Diffuse_Sensor_Largo AND Diffuse_Sensor_Corto AND palet = 0 THEN // Si no hay palet siendo posicionado y llegan palets a la vez, se posicionará la que haya en la cinta corta
	palet := 2;
ELSIF Diffuse_Sensor_Largo AND palet = 0 THEN // Si no hay palet siendo posicionado y llega una por la línea larga se posicionará
	palet := 1;
ELSIF Diffuse_Sensor_Corto AND palet = 0 THEN // Si no hay palet siendo posicionado y llega una por la línea corta se posicionará
	palet := 2;
END_IF

// Se indica que no hay palet cuando este sale del turntable
IF Falling_Edge_Sensor_Salida THEN
	palet := 0;
END_IF

// Control cintas. Se dejará pasar el palet siempre y cuando la línea de salida esté libre
CASE palet OF
	
	0: // Si no hay palets siendo posicionados, pero hay palets en las líneas para ser posicionadas, muevo las cintas para que lleguen	
		Turnable_Turn := Contador_Largo>0;
		Roller_Conveyor_Largo := Contador_Largo>0;
		Roller_Conveyor_Corto := Sacar_Palet_Paletizador OR (Contador_Corto>0 AND Contador_Corto<2);	
		Turnable_Roll_menos := FALSE;
		
	1: // Accion para trasladar el palet de la izquierda
		Turnable_Turn := TRUE;
		Turnable_Roll_menos := Turnable_Limit_90 AND Sacar_Palet_Turntable;	// Si está en posición y la linea de salida está libre	
		Roller_Conveyor_Largo := (Turnable_Limit_90 AND (NOT Turnable_Back_Limit OR NOT Diffuse_Sensor_Largo)) AND Sacar_Palet_Turntable; // Si está en posición, la línea de salida está libre y no hay palet siendo posicionado		
		Roller_Conveyor_Corto := NOT Diffuse_Sensor_Corto AND (Sacar_Palet_Paletizador OR (Contador_Corto>0 AND Contador_Corto<2)); // Si no hay palet en la línea y el paletizado quiere introducir una
		
	2: // Accion para posicionar el palet de enfrente
		Turnable_Turn := FALSE;		
		Turnable_Roll_menos := Turnable_Limit_0 AND NOT Turnable_Back_Limit; // Se mueve si está en posición y el palet no ha llegado al final
		Roller_Conveyor_Largo := NOT Diffuse_Sensor_Largo; // Si hay un palet, se para la cinta
		// Si está en posición y no acaba de llegar un palet(es decir, o no hay o hay uno en posición) y en la cinta hay un palet o se quiere introducir uno
		Roller_Conveyor_Corto := (Turnable_Limit_0 AND NOT Falling_Edge_Sensor_Secundario)AND (Sacar_Palet_Paletizador OR (Contador_Corto>0 AND Contador_Corto<2)); 
		IF Turnable_Back_Limit THEN // Si viene de colocar la de enfrente y está en el centro, se pasa al estado 3
			palet :=3;
		END_IF		
		
	3: // Accion para trasladar el palet de enfrente ya posicionado
		Turnable_Turn := TRUE;
		Turnable_Roll_menos := Turnable_Limit_90 AND Sacar_Palet_Turntable; // Si está en posición y la línea de enfrente está libre
		Roller_Conveyor_Largo := NOT Diffuse_Sensor_Largo; // Si hay un palet, se para la cinta
		Roller_Conveyor_Corto := NOT Diffuse_Sensor_Corto AND (Sacar_Palet_Paletizador OR (Contador_Corto>0 AND Contador_Corto<2));	// Si no hay palet en la línea y el paletizado quiere introducir una

		
END_CASE

]]></ST>
    </Implementation>
    <LineIds Name="POU_Cruce_Almacen">
      <LineId Id="11" Count="8" />
      <LineId Id="109" Count="0" />
      <LineId Id="20" Count="5" />
      <LineId Id="27" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="33" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="128" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="55" Count="2" />
      <LineId Id="146" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="81" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="149" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="99" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>