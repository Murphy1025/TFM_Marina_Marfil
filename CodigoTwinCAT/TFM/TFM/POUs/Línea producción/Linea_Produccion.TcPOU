<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Linea_Produccion" Id="{46885538-6502-4618-9df4-d85835106575}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Linea_Produccion

VAR_INPUT	
	
	Diffuse_Sensor_Corto 				: BOOL;
	Diffuse_Sensor_Largo 				: BOOL;
	Diffuse_Sensor_PP_Lid 				: BOOL;
	Diffuse_Sensor_PP_Base 				: BOOL;
	Diffuse_Sensor_PP_Salida 			: BOOL;
	Diffuse_Sensor_Pallet_Pieza 		: BOOL;		
	Diffuse_Sensor_Manipulador_Lid 		: BOOL;
	Diffuse_Sensor_Manipulador_Base 	: BOOL;
	Max_Capas_Apiladas					: INT;
	Palletizer_Clamped 					: BOOL;		
	Palletizer_Plate_Limit 				: BOOL;
	Palletizer_Push_Limit 				: BOOL;
	Palletizer_Elevator_Moving 			: BOOL;
	Palletizer_Elevator_Back 			: BOOL;
	Palletizer_Elevator_Front 			: BOOL;
	RFID_Reader_Command_ID 				: DINT;
	RFID_Reader_Status 					: DINT;
	Right_Positioner_1_Clamped 			: BOOL;	
	Right_Positioner_2_Clamped 			: BOOL;	
	Right_Positioner_2_Limit 			: BOOL;	
	Two_Axis_Pick_Place_1_Detected 		: BOOL;	
	Two_Axis_Pick_Place_1_MovingX 		: BOOL;
	Two_Axis_Pick_Place_1_MovingZ 		: BOOL;
	Linea_Salida_Libre 					: BOOL;
	Control_TAPP						: BOOL;	
	Control_Paletizador 				: BOOL;
	
END_VAR

VAR_IN_OUT
	
	Emitter 							: BOOL ;
	Sacar_Palet 							: BOOL;
	Error_RFID 							: BOOL;
	Estado_Pick_Place_1 				: INT  		:= 0; // Pick and Place	
	Estado_Palletizer_1 				: INT  		:= 0; // Paletizador
	Pallet_1_Emitidos 					: DINT;
	Contador_Manipulador_Lid 			: INT;
	Contador_Manipulador_Base 			: INT;
	Contador_Box 						: INT;

END_VAR

VAR_OUTPUT
	
	Belt_Conveyor_Lid 					: BOOL ;
	Belt_Conveyor_Base 					: BOOL ;	
	Belt_Conveyor_M_1_Lid 				: BOOL ;
	Belt_Conveyor_M_1_Base				: BOOL ;	
	Belt_Conveyor_M_2_Lid 				: BOOL ;
	Belt_Conveyor_M_2_Base 				: BOOL ;
	Belt_Conveyor_Box_1 				: BOOL ;	
	Belt_Conveyor_Box_2 				: BOOL ;	
	Capas_Apiladas						: INT;	
	Emitter_Box 						: BOOL;
	Palletizer_Belt_mas 				: BOOL;
	Palletizer_Chain_mas 				: BOOL;
	Palletizer_Clamp 					: BOOL;	
	Palletizer_Elevator_Move_Limit 		: BOOL;
	Palletizer_Elevator_Move_mas 		: BOOL;
	Palletizer_Elevator_Move_menos 		: BOOL;
	Palletizer_Open_Plate 				: BOOL;
	Palletizer_Push 					: BOOL;
	Palletizer_Turn 					: BOOL;
	Pivot_Arm 							: BOOL;
	RFID_Reader_Execute_Command 		: BOOL;
	Right_Positioner_1_Clamp 			: BOOL;
	Right_Positioner_2_Clamp 			: BOOL;
	Right_Positioner_2_Raise 			: BOOL;	
	Roller_Conveyor_2m_1 				: BOOL;
	Two_Axis_Pick_Place_1X 				: BOOL;
	Two_Axis_Pick_Place_1Z 				: BOOL;
	Two_Axis_Pick_Place_1_Grab 			: BOOL;
	
END_VAR

VAR	
	
	Bajar1 								: BOOL 		:= FALSE; // variable que indica si hay base en la cinta del Pick&Place
	//Bajar2								: BOOL 		:= FALSE;
	Biestable_Pivot 					: SR;
	Capas_Piezas_Apiladas 				: CTU;
	Cinta_1_Libre 						: BOOL 		:= TRUE; // variable para indicar que la cinta de tapas del Pick&Place puede introducir una nueva tapa en la pinza
	Cinta_2_Libre 						: BOOL 		:= TRUE; // variable para indicar que la cinta de bases del Pick&Place puede introducir una nueva base en la pinza
	Columnas 							: INT  		:= 0; // Columnas de cajas en la capa a apilar sobre el palet
	Contador_Pinza_Lid 					: INT  		:= 0; // Contador de piezas en la cinta de la pinza
	Contador_B 							: INT  		:= 0; // Contador de cajas creadas
	Estado_Pivot						: Tc2_Standard.RS;
	Falling_Edge_Pallet_Pieza 			: F_TRIG;
	Falling_Edge_Pallet_Front 			: F_TRIG;
	Falling_Edge_Pallet_Moving 			: F_TRIG;
	Falling_Edge_Corto 					: F_TRIG;
	Falling_Edge_Entrada_Pinza_1 		: F_TRIG;
	Falling_Edge_Entrada_Pinza_2 		: F_TRIG;	
	Falling_Edge_Salida_Pinza_2 		: F_TRIG;
	FallingEdgeZ1						: F_TRIG;
	FallingEdgeX1						: F_TRIG;
	FallingEdgeZ2						: F_TRIG;
	FallingEdgeX2						: F_TRIG;
	Filas 								: INT  		:= 0; // Filas de cajas en la capa a apilar sobre el palet
	Hay_Boxes							: BOOL 		:= FALSE;	//Indica si en el plato se han acumulado las suficientes cajas
	Hay_Palet 							: BOOL 		:= FALSE; // indica si hay palet debajo del plato
	Hay_Pieza_1							: WSTRING 	:= "Vacio"; // Pieza en pinza de tapas
	Hay_Pieza_2							: WSTRING 	:= "Vacio"; // Pieza en pinza de bases
	MovingX1							: BOOL 		:= FALSE;	// variable de control de movimiento del Pick&Place en el eje X
	MovingZ1							: BOOL 		:= FALSE; // variable de control de movimiento del Pick&Place en el eje Z
	Pall_Clamped						: BOOL		:= FALSE; // variable para indicar si se ha accionado la pinza del plato del paletizador
	Pallet_Back							: BOOL		:= FALSE; // palet posicionado en el elevador del paletizador
	Pallet_Front						: BOOL		:= FALSE; // palet sacado del elevador del paletizador
	Pallet_Moving						: BOOL		:= FALSE; // elevador del paletizador en reposo
	Plate_Limit							: BOOL		:= FALSE; // plato abierto
	Piezas_Pallet_Columna 				: CTU;
	Piezas_Pallet_Fila 					: CTU;	
	Pinza_1 							: POU_Pinzas;
	Pinza_2 							: POU_Pinzas;
	Push_Limit							: BOOL		:= FALSE; // variable para indicar que la varilla push del paletizador ha llegado al límite
	Rasing_Edge_Pinza_2 				: R_TRIG;
	Rasing_Edge_Push_Limit 				: R_TRIG;
	Rasing_Edge_Plate_Limit 			: R_TRIG;
	Rasing_Edge_Pall_Clamped 			: R_TRIG;
	Rasing_Edge_Pallet_Back 			: R_TRIG;
	Rasing_edge_salida_manipulador_Lid 	: R_TRIG;
	Rasing_edge_salida_manipulador_Base : R_TRIG;	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ // ---------------------------------------------------------------- 1. FALLING Y RASING EDGES ----------------------------------------------------------------
 
// Pivot
Falling_Edge_Corto(CLK:=Diffuse_Sensor_Corto);

// Posicionadores
Falling_Edge_Entrada_Pinza_1(CLK:= Diffuse_Sensor_PP_Lid);
Falling_Edge_Entrada_Pinza_2(CLK:= Diffuse_Sensor_PP_Base);
Falling_Edge_Salida_Pinza_2(CLK:= Diffuse_Sensor_PP_Salida);
Rasing_Edge_Pinza_2(CLK:=Right_Positioner_2_Limit);

// Pick and Place
FallingEdgeZ1(CLK := Two_Axis_Pick_Place_1_MovingZ);
FallingEdgeX1(CLK := Two_Axis_Pick_Place_1_MovingX);

// Paletizado
Falling_Edge_Pallet_Pieza(CLK := Diffuse_Sensor_Pallet_Pieza);
Rasing_Edge_Push_Limit (CLK:=Palletizer_Push_Limit);
Rasing_Edge_Plate_Limit (CLK:=Palletizer_Plate_Limit);
Rasing_Edge_Pall_Clamped (CLK:=Palletizer_Clamped);
Rasing_Edge_Pallet_Back(CLK := Palletizer_Elevator_Back);
Falling_Edge_Pallet_Front(CLK := Palletizer_Elevator_Front);
Falling_Edge_Pallet_Moving(CLK:= Palletizer_Elevator_Moving);

// Manipulador
Rasing_edge_salida_manipulador_Lid (CLK:= Diffuse_Sensor_Manipulador_Lid);
Rasing_edge_salida_manipulador_Base (CLK := Diffuse_Sensor_Manipulador_Base);


 // ---------------------------------------------------------------- 2. PIVOT DISTRIBUCIÓN PIEZAS ----------------------------------------------------------------

Biestable_Pivot(SET1:= Diffuse_Sensor_Largo , RESET:= Falling_Edge_Corto.Q );
Pivot_Arm:= Biestable_Pivot.Q1;

 // ---------------------------------------------------------------- 3. CONTROL CINTAS SOLDADOR ----------------------------------------------------------------

// Contadores piezas camino a ser soldadas
IF Rasing_edge_salida_manipulador_Lid.Q THEN
	Contador_Manipulador_Lid := Contador_Manipulador_Lid +1;
END_IF

IF Rasing_edge_salida_manipulador_Base.Q THEN
	Contador_Manipulador_Base := Contador_Manipulador_Base +1;
END_IF

// Control cintas: La cinta del soldador se mueve si no hay pieza a ser soldada, las otras dos se mueven si en total hay menos de 3 piezas camino a ser soldadas.
Belt_Conveyor_Lid := Cinta_1_Libre AND Contador_Manipulador_Lid>0  AND Contador_Manipulador_Base<4;
Belt_Conveyor_M_1_Lid := Contador_Manipulador_Lid>0 AND Contador_Manipulador_Lid<3;
Belt_Conveyor_M_2_Lid := Contador_Manipulador_Lid>0 AND Contador_Manipulador_Lid<3;

Belt_Conveyor_Base := Cinta_2_Libre AND Contador_Manipulador_Base>0  AND Contador_Manipulador_Base<4;
Belt_Conveyor_M_1_Base := Contador_Manipulador_Base>0 AND Contador_Manipulador_Base<3;
Belt_Conveyor_M_2_Base := Contador_Manipulador_Base>0 AND Contador_Manipulador_Base<3;

 // ---------------------------------------------------------------- 4. PINZAS----------------------------------------------------------------
 
Pinza_1 (	Falling_Edge_Entrada_Pinza  := Falling_Edge_Entrada_Pinza_1.Q,
			Falling_Edge_Salida_Pinza := FALSE,
			Right_Positioner_Clamped := Right_Positioner_1_Clamped,
			Right_Positioner_Clamp => Right_Positioner_1_Clamp,
			Cinta_Libre := Cinta_1_Libre ,
			Contador_Manipulador_Base := Contador_Pinza_Lid,
			Contador_Box := Contador_B,
			Hay_Pieza := Hay_Pieza_1);
			
Pinza_2 (	Falling_Edge_Entrada_Pinza  := Falling_Edge_Entrada_Pinza_2.Q,
			Falling_Edge_Salida_Pinza := Falling_Edge_Salida_Pinza_2.Q,
			Right_Positioner_Clamped := Right_Positioner_2_Clamped,
			Emitter_Box => Emitter_Box,
			Right_Positioner_Clamp => Right_Positioner_2_Clamp,
			Right_Positioner_Raise => Right_Positioner_2_Raise,
			Cinta_Libre := Cinta_2_Libre ,
			Contador_Manipulador_Base := Contador_Manipulador_Base,
			Contador_Box := Contador_Box,
			Hay_Pieza := Hay_Pieza_2);

 // ---------------------------------------------------------------- 5. SOLDADOR ----------------------------------------------------------------
	IF FallingEdgeX1.Q THEN MovingX1 := TRUE; END_IF	
	IF FallingEdgeZ1.Q THEN	MovingZ1 := TRUE; END_IF
						
IF 	Control_TAPP THEN		
	CASE Estado_Pick_Place_1 OF
		
			0: // Si está en reposo, tiene permitido moverse (botón start pulsado y stop no) y hay una tapa, baja para recogerla
				IF Hay_Pieza_1 = "Base" THEN
					Two_Axis_Pick_Place_1Z := TRUE;
					Estado_Pick_Place_1 :=1;			
				END_IF
				
			1:// Una vez que ha bajado, acciona el grab para cogerla y sube. Accionamos la cinta y colocamos Hay_pieza a false
				IF NOT Two_Axis_Pick_Place_1_MovingZ AND Two_Axis_Pick_Place_1_Detected THEN
					Two_Axis_Pick_Place_1_Grab:= TRUE;
					Estado_Pick_Place_1 :=2;
					Two_Axis_Pick_Place_1Z := FALSE;
					Contador_Manipulador_Lid := Contador_Manipulador_Lid -1;
					Hay_Pieza_1 := "Vacio";
					Cinta_1_Libre := TRUE;
				END_IF
				
			2://Una vez haya subido, estira X
				IF MovingZ1 THEN
					MovingZ1:= FALSE;
					Two_Axis_Pick_Place_1X := TRUE;
					Estado_Pick_Place_1 :=3;
				END_IF
				
			3:// Estirado, baja para colocarla encima de la otra pieza(base) siempre que haya una en posicionador
				IF MovingX1 THEN Bajar1 := TRUE; MovingX1 := FALSE; END_IF	
								
				IF Bajar1 AND Hay_Pieza_2 = "Base" THEN 
					Two_Axis_Pick_Place_1Z := TRUE;
					Estado_Pick_Place_1 :=4;
					Bajar1 := FALSE;
				END_IF
				
			4: // Cuando ha bajado, suelta la tapa y sube
				IF MovingZ1 THEN
					MovingZ1 := FALSE;
					Two_Axis_Pick_Place_1_Grab:= FALSE;
					Estado_Pick_Place_1 :=5;
					Two_Axis_Pick_Place_1Z := FALSE;
					Hay_Pieza_2 := "Completa";
				END_IF
			5: // Cuando ha subido, vuelve a la posición de reposo
				IF MovingZ1 THEN
					MovingZ1 := FALSE;
					Two_Axis_Pick_Place_1X := FALSE;
					Estado_Pick_Place_1 :=6;
				END_IF
				
			6: // Esperamos a que vuelva a la posición de reposo
				IF MovingX1 THEN
					MovingX1 := FALSE;
					Estado_Pick_Place_1 :=0;
				END_IF
				
	END_CASE
END_IF


 // ---------------------------------------------------------------- 6. CONTADORES Y CONTROL CINTAS PALETIZADOR ----------------------------------------------------------------
 
 // Contadores

Piezas_Pallet_Fila (CU:= Falling_Edge_Pallet_Pieza.Q,RESET:=FALSE); // suma cada vez que pase una pieza por sensor
Piezas_Pallet_Columna (CU:= (Rasing_Edge_Push_Limit.Q AND Palletizer_Push ) ,RESET:=FALSE); // suma cada vez que hace el push
Capas_Piezas_Apiladas (CU:= (Rasing_Edge_Plate_Limit.Q AND Palletizer_Open_Plate ) ,RESET:=FALSE); // suma cada vez que abre el plato, asi vamos preparando la siguiente tanda 
Capas_Apiladas := WORD_TO_INT(Capas_Piezas_Apiladas.CV);
IF Falling_Edge_Pallet_Pieza.Q THEN Contador_Box:=Contador_Box-1; END_IF

// Control cintas

// Si no están la cajas que necesitamos, hay cajas a introducir y el paletizador funciona
Palletizer_Belt_mas := (WORD_TO_INT(Piezas_Pallet_Fila.CV) < Filas AND Contador_Box >0 AND NOT Hay_Boxes AND Control_Paletizador); 
Belt_Conveyor_Box_1 := Palletizer_Belt_mas; // Si se pueden pasar box al paletizador, funcionará
Belt_Conveyor_Box_2 := Palletizer_Belt_mas; // Si se pueden pasar box al paletizador, funcionará

// Decidimos cuantas filas y columnas para que en el palet, las capas vayan alternadas
IF (Capas_Apiladas MOD 2 = 0) THEN
	
	Filas := 2;
	Columnas := 3;
	Palletizer_Turn := FALSE;
	
ELSE
	Filas := 3;
	Columnas := 2;
	Palletizer_Turn := TRUE;
	
END_IF

 // ---------------------------------------------------------------- 7. PALETIZADOR ----------------------------------------------------------------
 IF Rasing_Edge_Push_Limit.Q THEN Push_Limit:= TRUE; END_IF
 IF Rasing_Edge_Pall_Clamped.Q THEN Pall_Clamped:= TRUE; END_IF
 IF Rasing_Edge_Pallet_Back.Q THEN Pallet_Back:= TRUE; END_IF 
 IF Falling_Edge_Pallet_Moving.Q THEN Pallet_Moving:= TRUE; END_IF
 IF Rasing_Edge_Plate_Limit.Q THEN Plate_Limit:= TRUE; END_IF
 IF Falling_Edge_Pallet_Front.Q THEN Pallet_Front:= TRUE; END_IF
 
IF Control_Paletizador THEN 
	
	// Si están las piezas deseadas y el plato está libre, paramos la cinta Y empujamos
	IF WORD_TO_INT(Piezas_Pallet_Fila.CV) = Filas AND NOT Hay_Boxes THEN 
		
		Palletizer_Push := TRUE; 
		Piezas_Pallet_Fila(RESET:=TRUE); 
		Palletizer_Belt_mas := TRUE;
	
	END_IF
	
	IF Push_Limit AND Palletizer_Push THEN Palletizer_Push := FALSE;Push_Limit:=FALSE; END_IF
	
	// Si están todas las cajas a pasar al palet, pinzamos
	IF WORD_TO_INT(Piezas_Pallet_Columna.CV) = Columnas AND Push_Limit THEN 
		
		Palletizer_Clamp := TRUE; 
		Piezas_Pallet_Columna(RESET:=TRUE);
		Push_Limit:=FALSE;
 
	END_IF
	
	// una vez pinzado si hay palet para sacar cajas sacamos, abrimos
	IF Pall_Clamped THEN Hay_Boxes := TRUE;Pall_Clamped:=FALSE; END_IF
	IF Hay_Boxes AND Hay_Palet THEN Palletizer_Open_Plate := TRUE; END_IF

	
	CASE Estado_Palletizer_1 OF
		
		0: 	// Si está en reposo se emite una caja, se accionan las cintas para que entre la caja
			IF Emitter THEN 
				Roller_Conveyor_2m_1 := TRUE;
				Palletizer_Chain_mas := TRUE;
				Pallet_1_Emitidos := Pallet_1_Emitidos +1;
				Estado_Palletizer_1 := 1;
			END_IF
			
		1: // Si la caja entra en el paletizado, se para la cinta y se enviar el código
			IF Pallet_Back THEN
				Emitter := FALSE;
				RFID_Reader_Execute_Command := TRUE;
				Roller_Conveyor_2m_1 := FALSE;
				Palletizer_Chain_mas := FALSE;
				Estado_Palletizer_1 := 2;	
				Pallet_Back	:= FALSE;	
			END_IF
			
		2: // Le damos un estado de espera para comprobar si ha escrito bien, si ha habido error, no va avanzar el avance del estado por lo que puedo controlar por aquí como va todo
			IF Pallet_1_Emitidos = RFID_Reader_Command_ID THEN
				IF RFID_Reader_Status=0 THEN
					RFID_Reader_Execute_Command := FALSE;
					Roller_Conveyor_2m_1 := TRUE;
					Palletizer_Chain_mas := TRUE;
					Estado_Palletizer_1 := 3;	
					Error_RFID := FALSE;	
				ELSE 
					Error_RFID := TRUE;					
					Estado_Palletizer_1 := 0; // En este caso aparecerá en el HMI que ha habido un error y se habilitará desde ahí el emisor
				END_IF
			END_IF
			
		3:	// Si la caja está en el elevador, se para que se mueva y se sube al limite	
			IF Palletizer_Elevator_Back AND Palletizer_Elevator_Front THEN
				Palletizer_Elevator_Move_Limit := TRUE;
				Palletizer_Elevator_Move_mas := TRUE;
				Palletizer_Chain_mas := FALSE;
				//Hay_Palet := TRUE; 
				Estado_Palletizer_1 := 4;
			END_IF
			
		4: // Cuando la caja llega arriba del todo se para la subida
			IF Pallet_Moving THEN
				Palletizer_Elevator_Move_Limit := FALSE;
				Palletizer_Elevator_Move_mas := FALSE;
				Estado_Palletizer_1 := 5;
				Hay_Palet := TRUE; 
				Pallet_Moving:= FALSE;
			END_IF
			
		5: // Se baja un poco cada vez que se quiera añadir una nueva fila. Cuando se ha cerrado ya el plato
			IF Plate_Limit AND Palletizer_Open_Plate THEN 
				Palletizer_Elevator_Move_menos := TRUE; 
				Estado_Palletizer_1 := 6;
				Plate_Limit	:= FALSE;
			END_IF
			
		6: // Si tenemos que seguir apilando, se quita que baje para poder enviar otro pulso, si no, bajamos del todo
			IF Pallet_Moving THEN
				IF Capas_Apiladas = Max_Capas_Apiladas THEN
					Palletizer_Elevator_Move_Limit := TRUE;
					Estado_Palletizer_1 := 7;
					Capas_Piezas_Apiladas.RESET:= TRUE;
					Hay_Palet := FALSE; 
				ELSE
					Palletizer_Elevator_Move_menos := FALSE;
					Estado_Palletizer_1 := 5;
				END_IF
				Palletizer_Open_Plate := FALSE; 
				Palletizer_Clamp := FALSE;
				Sacar_Palet := FALSE;
				Hay_Boxes := FALSE;
				Pallet_Moving:= FALSE;
			END_IF
			
		7: // Una vez bajado del todo, indicamos que podemos sacar la caja y esperamos a que la linea esté libre para ello
			IF Pallet_Moving THEN
				Sacar_Palet := TRUE;
				Pallet_Moving:= FALSE;
			END_IF
			IF Linea_Salida_Libre AND Sacar_Palet THEN
				Palletizer_Elevator_Move_Limit := FALSE;
				Palletizer_Elevator_Move_menos := FALSE;
				Palletizer_Chain_mas := TRUE;				
				Estado_Palletizer_1 := 8;			
			END_IF
		8: // Cuando la caja ha salido, indicamos que no hay palet, se para la cinta del paletizado y pasamos a posición de reposo
			IF Pallet_Front THEN
				
				Emitter := TRUE;
				Sacar_Palet := FALSE;
				Palletizer_Chain_mas := FALSE;
				Estado_Palletizer_1 := 0;	
				Pallet_Front := FALSE;
			
			END_IF
			
	END_CASE	
	
END_IF


]]></ST>
    </Implementation>
    <LineIds Name="Linea_Produccion">
      <LineId Id="255" Count="0" />
      <LineId Id="1011" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="999" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="184" Count="1" />
      <LineId Id="188" Count="0" />
      <LineId Id="1070" Count="0" />
      <LineId Id="193" Count="2" />
      <LineId Id="1071" Count="0" />
      <LineId Id="251" Count="1" />
      <LineId Id="289" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="337" Count="0" />
      <LineId Id="445" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="1072" Count="0" />
      <LineId Id="769" Count="2" />
      <LineId Id="1061" Count="1" />
      <LineId Id="198" Count="0" />
      <LineId Id="989" Count="0" />
      <LineId Id="1020" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="990" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="780" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="781" Count="1" />
      <LineId Id="784" Count="2" />
      <LineId Id="783" Count="0" />
      <LineId Id="787" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="790" Count="0" />
      <LineId Id="793" Count="0" />
      <LineId Id="1066" Count="0" />
      <LineId Id="1063" Count="0" />
      <LineId Id="1067" Count="0" />
      <LineId Id="791" Count="0" />
      <LineId Id="1027" Count="0" />
      <LineId Id="1026" Count="0" />
      <LineId Id="1069" Count="0" />
      <LineId Id="1028" Count="2" />
      <LineId Id="1033" Count="0" />
      <LineId Id="1035" Count="0" />
      <LineId Id="1040" Count="0" />
      <LineId Id="1025" Count="0" />
      <LineId Id="1058" Count="0" />
      <LineId Id="1045" Count="0" />
      <LineId Id="1047" Count="2" />
      <LineId Id="1057" Count="0" />
      <LineId Id="1050" Count="1" />
      <LineId Id="1056" Count="0" />
      <LineId Id="1055" Count="0" />
      <LineId Id="1046" Count="0" />
      <LineId Id="1059" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="1291" Count="1" />
      <LineId Id="1289" Count="0" />
      <LineId Id="1295" Count="0" />
      <LineId Id="719" Count="0" />
      <LineId Id="842" Count="0" />
      <LineId Id="720" Count="4" />
      <LineId Id="843" Count="0" />
      <LineId Id="725" Count="4" />
      <LineId Id="788" Count="0" />
      <LineId Id="731" Count="2" />
      <LineId Id="844" Count="0" />
      <LineId Id="734" Count="1" />
      <LineId Id="1266" Count="0" />
      <LineId Id="736" Count="1" />
      <LineId Id="1262" Count="0" />
      <LineId Id="845" Count="0" />
      <LineId Id="739" Count="0" />
      <LineId Id="1269" Count="0" />
      <LineId Id="740" Count="0" />
      <LineId Id="742" Count="4" />
      <LineId Id="846" Count="0" />
      <LineId Id="747" Count="1" />
      <LineId Id="1276" Count="0" />
      <LineId Id="749" Count="3" />
      <LineId Id="847" Count="0" />
      <LineId Id="754" Count="1" />
      <LineId Id="1282" Count="0" />
      <LineId Id="756" Count="1" />
      <LineId Id="1277" Count="0" />
      <LineId Id="848" Count="0" />
      <LineId Id="759" Count="1" />
      <LineId Id="1288" Count="0" />
      <LineId Id="761" Count="0" />
      <LineId Id="1283" Count="0" />
      <LineId Id="849" Count="0" />
      <LineId Id="717" Count="1" />
      <LineId Id="46" Count="0" />
      <LineId Id="1109" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="1138" Count="0" />
      <LineId Id="1111" Count="4" />
      <LineId Id="1420" Count="0" />
      <LineId Id="1116" Count="20" />
      <LineId Id="1110" Count="0" />
      <LineId Id="1137" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="1140" Count="0" />
      <LineId Id="1547" Count="0" />
      <LineId Id="1549" Count="0" />
      <LineId Id="1555" Count="0" />
      <LineId Id="1564" Count="0" />
      <LineId Id="1563" Count="0" />
      <LineId Id="1565" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="855" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="856" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="1092" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="246" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="270" Count="1" />
      <LineId Id="857" Count="0" />
      <LineId Id="272" Count="1" />
      <LineId Id="1545" Count="0" />
      <LineId Id="858" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="320" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="1090" Count="0" />
      <LineId Id="304" Count="0" />
      <LineId Id="379" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="859" Count="0" />
      <LineId Id="382" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="663" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="860" Count="0" />
      <LineId Id="640" Count="0" />
      <LineId Id="643" Count="0" />
      <LineId Id="665" Count="0" />
      <LineId Id="647" Count="0" />
      <LineId Id="653" Count="0" />
      <LineId Id="667" Count="0" />
      <LineId Id="649" Count="0" />
      <LineId Id="1550" Count="0" />
      <LineId Id="645" Count="0" />
      <LineId Id="862" Count="0" />
      <LineId Id="641" Count="0" />
      <LineId Id="648" Count="0" />
      <LineId Id="1697" Count="0" />
      <LineId Id="651" Count="0" />
      <LineId Id="654" Count="0" />
      <LineId Id="668" Count="0" />
      <LineId Id="655" Count="0" />
      <LineId Id="659" Count="2" />
      <LineId Id="1696" Count="0" />
      <LineId Id="652" Count="0" />
      <LineId Id="1698" Count="0" />
      <LineId Id="642" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="396" Count="2" />
      <LineId Id="443" Count="0" />
      <LineId Id="401" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="395" Count="0" />
      <LineId Id="863" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="405" Count="1" />
      <LineId Id="408" Count="1" />
      <LineId Id="1086" Count="0" />
      <LineId Id="1556" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="864" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="411" Count="1" />
      <LineId Id="414" Count="0" />
      <LineId Id="1557" Count="0" />
      <LineId Id="413" Count="0" />
      <LineId Id="865" Count="0" />
      <LineId Id="415" Count="0" />
      <LineId Id="530" Count="0" />
      <LineId Id="535" Count="3" />
      <LineId Id="1088" Count="0" />
      <LineId Id="539" Count="2" />
      <LineId Id="533" Count="0" />
      <LineId Id="542" Count="1" />
      <LineId Id="712" Count="0" />
      <LineId Id="1091" Count="0" />
      <LineId Id="1558" Count="0" />
      <LineId Id="534" Count="0" />
      <LineId Id="416" Count="0" />
      <LineId Id="423" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="430" Count="0" />
      <LineId Id="1559" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="545" Count="0" />
      <LineId Id="549" Count="2" />
      <LineId Id="548" Count="0" />
      <LineId Id="547" Count="0" />
      <LineId Id="432" Count="0" />
      <LineId Id="434" Count="0" />
      <LineId Id="410" Count="0" />
      <LineId Id="666" Count="0" />
      <LineId Id="813" Count="0" />
      <LineId Id="439" Count="0" />
      <LineId Id="433" Count="0" />
      <LineId Id="1561" Count="1" />
      <LineId Id="435" Count="0" />
      <LineId Id="866" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="867" Count="0" />
      <LineId Id="440" Count="0" />
      <LineId Id="339" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="369" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>